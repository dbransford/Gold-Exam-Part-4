#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE
#INCLUDEPATH "C:\\Simpl Sharp Programming\\Password\\Password\\bin\\Debug\\"
#USER_SIMPLSHARP_LIBRARY "Password"


Digital_input 	Add_User, 
				Update_Passcode, 
				Update_Access, 
				Delete_User, 
				_SKIP_,
				Debug_Print,
				_SKIP_;

String_Input 	Username[50],
				Passcode[50],
                Backdoor_User[50],
				Backdoor_Password[50];
Analog_Input 	AccessLevel,
				_SKIP_,
				SelectUser,
				_SKIP_;

String_input	FilePath$[100];
Analog_output 	Selected_User_Access_Level; 
string_output 	Dialog_Message$,
				Last_Login$,
				_SKIP_;
Analog_Output	Number_Of_Users;
String_Output 	UserNameList[100];



InterfaceInstance PasswordObject;

String Users[50][100];

callback signed_integer_function DialogMessage(string Message)
{
	Dialog_Message$ = Message;
}

callback signed_integer_function UpdateUI()
{
	integer x;
	x = 0;
	Number_of_Users = Login.ListSize;
	while(x <= Login.ListSize)
	{
		Users[x] = Login.UserNames[x];
		UserNameList[x+1] = Users[x];
		x = x + 1;
	}
	//x = x - 1;
	while(x <= 99)
	{
		UserNameList[x] = "";
		x = x + 1;
	}
}
function UpdateData()
{
	Selected_User_Access_Level = Login.GetUserAccessLevel(Users[SelectUser-1]);
	Last_Login$ = Login.GetLastLogin(Users[SelectUser-1]);
}

Change SelectUser
{
 	UpdateData();
}
Push Update_Passcode
{
	Login.UpdatePasscode(Users[SelectUser-1],Passcode);
	UpdateData();
}

Push Update_Access
{
	Login.UpdateAccessLevel(Users[SelectUser-1],AccessLevel);
	ProcessLogic();
	UpdateData();
}

push Delete_User
{
	Login.DeleteUser(Users[SelectUser-1]);
	UpdateData();

}

Push Add_User
{
	Login.AddUser(Username, Passcode, AccessLevel);
	UpdateData();
}

push Debug_Print
{
	Login.PrintUsers();
}

Function Main()
{
	RegisterDelegate (Login, SendUIUpdate, UpdateUI);
	RegisterDelegate (Login, SendDialogMessage, DialogMessage);
	WaitForInitializationComplete();
	Login.BackdoorUser = Backdoor_user;
	Login.BackdoorPassword = Backdoor_Password;
	Login.BackdoorAccessLevel = 65535;
	Login.FilePath = FilePath$;
	if(Login.FileRead = 0)
	{
		Login.ReadData();
	}
	ProcessLogic();
	Login.ForceUIUpdate();
}
